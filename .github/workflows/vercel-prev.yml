name: Vercel Preview Deployment

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VITE_ZLIG_DEMO_BASE_URL: ${{ secrets.VITE_ZLIG_DEMO_BASE_URL }}

jobs:
  vercel-deploy-preview:
    runs-on: ubuntu-latest
    outputs: # needs `id` to reference the output
      deploymentUrl: ${{ steps.deploy.outputs.deploymentUrl }}
    steps:
      - name: Checkout the Codebase
        uses: actions/checkout@v3

      # - name: Enable Corepack
      #   run: corepack enable

      - name: Setup pnpm as package manager
        uses: pnpm/action-setup@v3
        with:
          version: 9.10.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: pnpm

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: |
          # test
          export VITE_ZLIG_DEMO_BASE_URL=${{ secrets.VITE_ZLIG_DEMO_BASE_URL }}
          echo "VITE_ZLIG_DEMO_BASE_URL=${{ secrets.VITE_ZLIG_DEMO_BASE_URL }}" >> $GITHUB_ENV
          VITE_ZLIG_DEMO_BASE_URL=${{ secrets.VITE_ZLIG_DEMO_BASE_URL }} vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deploy.log
          URL=$(cat deploy.log | grep -o 'https:\/\/[^ ]*.vercel.app' | head -n1)
          echo "deploymentUrl=$URL" >> $GITHUB_OUTPUT

  add-comment-to-pr: # thanks to: https://github.com/vercel/vercel/discussions/9065#discussioncomment-7384786
    runs-on: ubuntu-latest
    needs: vercel-deploy-preview
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Comment URL to PR
        uses: actions/github-script@v7
        id: comment-deployment-url-script
        env:
          DEPLOYMENT_URL: ${{ needs.vercel-deploy-preview.outputs.deploymentUrl }}
        with:
          script: |
            // Get pull requests that are open for current ref.
            const pullRequests = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`
            })

            // Set issue number for following calls from context (if on pull request event) or from above variable.
            const issueNumber = context.issue.number || pullRequests.data[0].number

            const outputPrefix = "ðŸ‘€ Preview deployed"

            // Retrieve existing bot comments for the PR
            const {data: comments} = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
            })
            const botComment = comments.find(comment => {
                return comment.user.type === 'Bot' && comment.body.includes(outputPrefix)
            })

            // Get the current date and time
            const now = (new Date).toISOString()

            // Create the output message
            const output = `${outputPrefix}

              | URL | ${process.env.DEPLOYMENT_URL} |
              |:---|:---|
              | Last Updated | ${now} |
            `

            // If we have a comment, update it, otherwise create a new one
            if (botComment) {
                github.rest.issues.updateComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    comment_id: botComment.id,
                    body: output
                })
            } else {
                github.rest.issues.createComment({
                    issue_number: issueNumber,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: output
                })
            }
