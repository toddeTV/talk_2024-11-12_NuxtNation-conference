name: Vercel Production Deployment

on:
  push:
    # The conditions are OR conditions, so we must check the main branch later and cannot use the branch filter here.
    # Also, regex is not fully supported for branch filters, so we must check the tag structure later.
    tags:
      - '*'

env:
  VERCEL_TELEMETRY_DISABLED: 1
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  check-tag-structure:
    name: Check Tag Structure
    runs-on: ubuntu-latest
    steps:
      - name: Extract Tag Name
        id: extract_tag_name
        shell: bash
        run: echo "tag_name=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/tags/}}" >> $GITHUB_OUTPUT

      - name: Check Tag Name
        uses: actions/github-script@v7
        env:
          TAG_NAME: ${{ steps.extract_tag_name.outputs.tag_name }}
        with:
          script: |
            const tagName = process.env.TAG_NAME
            if (/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/.test(tagName)) {
              core.setFailed('The tag triggering this workflow was not structured as date `YYYY-MM-DD`, which is required. The workflow will now exit.')
            }

  check-main-branch:
    name: Check Main Branch
    needs:
      - check-tag-structure
    runs-on: ubuntu-latest
    steps:
      - name: Extract Branch Name
        id: extract_branch_name
        shell: bash
        run: echo "branch_name=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Check Main Branch
        uses: actions/github-script@v7
        env:
          BRANCH_NAME: ${{ steps.extract_branch_name.outputs.branch_name }}
        with:
          script: |
            const branchName = process.env.BRANCH_NAME
            if (branchName !== 'main') {
              core.setFailed('This workflow was not run on the main branch, which is required. The workflow will now exit.')
            }

  dependence-release:
    name: Depend on Release
    needs:
      - check-main-branch
    uses: ./.github/workflows/release.yml

  vercel-deploy-production:
    name: Vercel Deploy Production
    needs:
      - dependence-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Codebase
        uses: actions/checkout@v3

      # - name: Enable Corepack
      #   run: corepack enable

      - name: Setup pnpm as package manager
        uses: pnpm/action-setup@v3
        with:
          version: 9.10.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: pnpm

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        env:
          VITE_ZLIG_DEMO_BASE_URL: ${{ secrets.VITE_ZLIG_DEMO_BASE_URL }}
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
