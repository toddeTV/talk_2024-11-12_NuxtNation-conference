name: Vercel Production Deployment

on:
  push:
    # The conditions are OR conditions, so we must check the main branch later
    # branches:
    #   - main
    tags:
      - '*'

env:
  VERCEL_TELEMETRY_DISABLED: 1
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  check-main-branch:
    name: Check Main Branch
    runs-on: ubuntu-latest
    steps:
      - name: Extract Branch Name
        id: extract_branch_name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Check Main Branch
        uses: actions/github-script@v7
        env:
          BRANCH_NAME: ${{ steps.extract_branch_name.outputs.branch }}
        with:
          script: |
            const branch = process.env.BRANCH_NAME
            if (branch !== 'main') {
              core.setFailed('This workflow was not run on the main branch, which is required. The workflow will now exit.')
            }

  dependence-release:
    name: Depend on Release
    needs:
      - check-main-branch
    uses: ./.github/workflows/release.yml

  vercel-deploy-production:
    name: Vercel Deploy Production
    needs:
      - dependence-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Codebase
        uses: actions/checkout@v3

      # - name: Enable Corepack
      #   run: corepack enable

      - name: Setup pnpm as package manager
        uses: pnpm/action-setup@v3
        with:
          version: 9.10.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: pnpm

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        env:
          VITE_ZLIG_DEMO_BASE_URL: ${{ secrets.VITE_ZLIG_DEMO_BASE_URL }}
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
